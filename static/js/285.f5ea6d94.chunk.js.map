{"version":3,"file":"static/js/285.f5ea6d94.chunk.js","mappings":"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","sources":["pages/Register.jsx","../node_modules/@chakra-ui/icons/src/ViewOff.tsx","../node_modules/@chakra-ui/icons/src/Email.tsx","../node_modules/@chakra-ui/icons/src/Lock.tsx","../node_modules/@chakra-ui/icons/src/View.tsx"],"sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n  Heading,\n  Button,\n  useToast,\n  InputLeftElement,\n  InputGroup,\n  InputRightElement,\n  Avatar,\n} from '@chakra-ui/react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { signup } from 'redux/auth/authOperations';\nimport { selectAuthLoading } from 'redux/selectors';\nimport { EmailIcon, LockIcon, ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\n\nconst schema = yup\n  .object({\n    name: yup\n      .string()\n      .required()\n      .trim()\n      .min(3, 'Name must be no less than 3 characters long')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Name may contain only letters, apostrophe, dash and spaces'\n      ),\n    email: yup.string().required().email().trim(),\n    password: yup.string().required().trim().min(7),\n  })\n  .required();\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoading = useSelector(selectAuthLoading);\n  const toast = useToast();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onTouched',\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    dispatch(signup(data))\n      .unwrap()\n      .then(() =>\n        toast({\n          title: `Registration is successfully completed`,\n          isClosable: true,\n          position: 'top-right',\n          status: 'success',\n          duration: 3000,\n        })\n      )\n      .catch(() =>\n        toast({\n          title: `User with this email address already exists`,\n          isClosable: true,\n          position: 'top-right',\n          status: 'error',\n          duration: 3000,\n        })\n      );\n  };\n\n  return (\n    <VStack\n      onSubmit={handleSubmit(onSubmit)}\n      as=\"form\"\n      mx=\"auto\"\n      p=\"4\"\n      bg=\"#1a1d2b\"\n      borderRadius={8}\n    >\n      <Heading>Register</Heading>\n\n      <FormControl isInvalid={errors.name} isRequired>\n        <FormLabel>Name</FormLabel>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <Avatar bg=\"#ffd76d\" size=\"xs\" />\n          </InputLeftElement>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            _placeholder={{ opacity: 0.5, color: '#ffd76d' }}\n            {...register('name')}\n            bg={'#161821'}\n          />\n        </InputGroup>\n        <FormErrorMessage>\n          {errors.name && errors.name.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={errors.email} isRequired>\n        <FormLabel>Email</FormLabel>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <EmailIcon color={'#ffd76d'} />\n          </InputLeftElement>\n          <Input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            _placeholder={{ opacity: 0.5, color: 'inherit' }}\n            {...register('email')}\n            bg={'#161821'}\n          />\n        </InputGroup>\n\n        <FormErrorMessage>\n          {errors.email && errors.email.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={errors.password} isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            pr=\"4.5rem\"\n            type={show ? 'text' : 'password'}\n            placeholder=\"Enter password\"\n            _placeholder={{ opacity: 0.5, color: 'inherit' }}\n            {...register('password')}\n            bg={'#161821'}\n          />\n          <InputLeftElement pointerEvents=\"none\">\n            <LockIcon color={'#ffd76d'} />\n          </InputLeftElement>\n          <InputRightElement width=\"4.5rem\">\n            <Button\n              h=\"1.75rem\"\n              size=\"sm\"\n              onClick={handleClick}\n              background=\"transparent\"\n            >\n              {show ? (\n                <ViewOffIcon color={'#ff2e4d'} />\n              ) : (\n                <ViewIcon color={'#ffd76d'} />\n              )}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n        <FormErrorMessage>\n          {errors.password && errors.password.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        variant=\"outline\"\n        color={'#ffd76d'}\n        isLoading={isLoading}\n        mt=\"4\"\n      >\n        Sign Up\n      </Button>\n\n      <Button\n        onClick={() => navigate('/login')}\n        color={'#ffd76d'}\n        variant=\"ghost\"\n      >\n        Click here if you already have an account\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Register;\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ViewOffIcon = createIcon({\n  displayName: \"ViewOffIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M23.2,10.549a20.954,20.954,0,0,0-4.3-3.6l4-3.995a1,1,0,1,0-1.414-1.414l-.018.018a.737.737,0,0,1-.173.291l-19.5,19.5c-.008.007-.018.009-.026.017a1,1,0,0,0,1.631,1.088l4.146-4.146a11.26,11.26,0,0,0,4.31.939h.3c4.256,0,8.489-2.984,11.051-5.8A2.171,2.171,0,0,0,23.2,10.549ZM16.313,13.27a4.581,4.581,0,0,1-3,3.028,4.3,4.3,0,0,1-3.1-.19.253.253,0,0,1-.068-.407l5.56-5.559a.252.252,0,0,1,.407.067A4.3,4.3,0,0,1,16.313,13.27Z\" />\n      <path d=\"M7.615,13.4a.244.244,0,0,0,.061-.24A4.315,4.315,0,0,1,7.5,12,4.5,4.5,0,0,1,12,7.5a4.276,4.276,0,0,1,1.16.173.244.244,0,0,0,.24-.062l1.941-1.942a.254.254,0,0,0-.1-.421A10.413,10.413,0,0,0,12,4.75C7.7,4.692,3.4,7.7.813,10.549a2.15,2.15,0,0,0-.007,2.9,21.209,21.209,0,0,0,3.438,3.03.256.256,0,0,0,.326-.029Z\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const EmailIcon = createIcon({\n  displayName: \"EmailIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M11.114,14.556a1.252,1.252,0,0,0,1.768,0L22.568,4.87a.5.5,0,0,0-.281-.849A1.966,1.966,0,0,0,22,4H2a1.966,1.966,0,0,0-.289.021.5.5,0,0,0-.281.849Z\" />\n      <path d=\"M23.888,5.832a.182.182,0,0,0-.2.039l-6.2,6.2a.251.251,0,0,0,0,.354l5.043,5.043a.75.75,0,1,1-1.06,1.061l-5.043-5.043a.25.25,0,0,0-.354,0l-2.129,2.129a2.75,2.75,0,0,1-3.888,0L7.926,13.488a.251.251,0,0,0-.354,0L2.529,18.531a.75.75,0,0,1-1.06-1.061l5.043-5.043a.251.251,0,0,0,0-.354l-6.2-6.2a.18.18,0,0,0-.2-.039A.182.182,0,0,0,0,6V18a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A.181.181,0,0,0,23.888,5.832Z\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const LockIcon = createIcon({\n  d: \"M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z\",\n  displayName: \"LockIcon\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ViewIcon = createIcon({\n  displayName: \"ViewIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M23.432,10.524C20.787,7.614,16.4,4.538,12,4.6,7.6,4.537,3.213,7.615.568,10.524a2.211,2.211,0,0,0,0,2.948C3.182,16.351,7.507,19.4,11.839,19.4h.308c4.347,0,8.671-3.049,11.288-5.929A2.21,2.21,0,0,0,23.432,10.524ZM7.4,12A4.6,4.6,0,1,1,12,16.6,4.6,4.6,0,0,1,7.4,12Z\" />\n      <circle cx=\"12\" cy=\"12\" r=\"2\" />\n    </g>\n  ),\n})\n"],"names":["schema","yup","name","required","trim","min","matches","email","password","dispatch","useDispatch","navigate","useNavigate","isLoading","useSelector","selectAuthLoading","toast","useToast","_useState","useState","_useState2","_slicedToArray","show","setShow","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","formState","_jsxs","VStack","onSubmit","data","signup","unwrap","then","title","isClosable","position","status","duration","catch","as","mx","p","bg","borderRadius","children","_jsx","Heading","FormControl","isInvalid","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","Avatar","size","Input","_objectSpread","type","placeholder","_placeholder","opacity","color","FormErrorMessage","message","EmailIcon","pr","LockIcon","InputRightElement","width","Button","h","onClick","background","ViewOffIcon","ViewIcon","variant","mt","createIcon","displayName","path","jsxs","fill","jsx","d","cx","cy","r"],"sourceRoot":""}