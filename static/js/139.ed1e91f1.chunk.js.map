{"version":3,"file":"static/js/139.ed1e91f1.chunk.js","mappings":"sZAGOA,GAAgDC,E,QAAAA,GAErD,CACAC,KAAA,sBACAC,SAAA,kBACAC,aAAc,cACfC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GANaO,EAAAF,EAAA,GAAsBG,EAAeH,EAAA,G,4CCC5C,SAASI,EAASP,GAJzB,IAAAQ,EAKQC,EAAQT,EAAKU,MAAM,KACnBC,EAAY,OAAAH,EAAAC,EAAM,IAAND,EAAY,GACxBI,EAAWH,EAAMI,OAAS,EAAIJ,EAAMA,EAAMI,OAAS,GAAK,GAC9D,OAAOF,GAAaC,EAAA,GAAAE,OACbH,EAAUI,OAAO,IAACD,OAAIF,EAASG,OAAO,IACzCJ,EAAUI,OAAO,EACvB,CASO,SAASC,EAAWC,GACzB,IAAQjB,EAA+BiB,EAA/BjB,KAAMkB,EAAyBD,EAAzBC,YAAgBC,GAAAC,EAAAA,EAAAA,GAASH,EAAAI,GACjCC,EAAShB,IAEf,OACEiB,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAIC,KAAK,MAAM,aAAY1B,GAAUmB,GAAA,IAAMQ,MAAOL,EAAOM,MAC9DC,SAAA7B,EAAO,MAAAkB,OAAA,EAAAA,EAAclB,GAAQ,OAGpC,CAEAgB,EAAWc,YAAc,aCzBlB,IAAMC,EAA4C,SAACd,GAAA,OACxDe,EAAAA,EAAAA,MAACR,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNQ,QAAQ,cACRC,MAAM,OACNC,MAAM,OACNC,OAAO,OACPC,UAAU,sBACNpB,GAAA,IAEJY,SAAA,EAAAN,EAAAA,EAAAA,KAAC,QACCe,KAAK,eACLC,EAAE,mMAEJhB,EAAAA,EAAAA,KAAC,QACCe,KAAK,eACLC,EAAE,kMAEN,E,UCTK,SAASC,EAAYvB,GAC1B,IACEwB,EAaExB,EAbFwB,IACAC,EAYEzB,EAZFyB,OACAC,EAWE1B,EAXF0B,QACAC,EAUE3B,EAVF2B,OACA1B,EASED,EATFC,YACAlB,EAQEiB,EARFjB,KACA6C,EAOE5B,EAPF4B,aACAC,EAME7B,EANF6B,QACAC,EAKE9B,EALF8B,UAAAC,EAKE/B,EAJFgC,KAAAA,OAAA,IAAAD,GAAOzB,EAAAA,EAAAA,KAACQ,EAAA,IAAkBiB,EAC1BE,EAGEjC,EAHFiC,eACAC,EAEElC,EAFFkC,eACAC,EACEnC,EADFmC,YAMIC,EC4BD,SAAkBpC,GACvB,IACE6B,EAQE7B,EARF6B,QACAL,EAOExB,EAPFwB,IACAC,EAMEzB,EANFyB,OACAE,EAKE3B,EALF2B,OACAD,EAIE1B,EAJF0B,QACAS,EAGEnC,EAHFmC,YACAE,EAEErC,EAFFqC,MACAJ,EACEjC,EADFiC,eAGFK,GAA4BC,EAAAA,EAAAA,UAAiB,WAASC,GAAArD,EAAAA,EAAAA,GAAAmD,EAAA,GAA/CF,EAAAI,EAAA,GAAQC,EAASD,EAAA,IAExBE,EAAAA,EAAAA,YAAU,WACRD,EAAUjB,EAAM,UAAY,UAC9B,GAAG,CAACA,IAEJ,IAAMmB,GAAWC,EAAAA,EAAAA,UAEXC,GAAOC,EAAAA,EAAAA,cAAY,WACvB,GAAKtB,EAAL,CAEAuB,IAEA,IAAMC,EAAM,IAAIC,MAChBD,EAAIxB,IAAMA,EACNW,IAAaa,EAAIb,YAAcA,GAC/BV,IAAQuB,EAAIE,OAASzB,GACrBY,IAAOW,EAAIX,MAAQA,GACnBR,IAASmB,EAAInB,QAAUA,GAE3BmB,EAAIG,OAAS,SAACC,GACZL,IACAN,EAAU,UACV,MAAAd,GAAAA,EAASyB,EACX,EACAJ,EAAIK,QAAU,SAACC,GACbP,IACAN,EAAU,UACV,MAAAf,GAAAA,EAAU4B,EACZ,EAEAX,EAASY,QAAUP,CAtBH,CAuBlB,GAAG,CAACxB,EAAKW,EAAaV,EAAQY,EAAOV,EAAQD,EAASG,IAEhDkB,EAAQ,WACRJ,EAASY,UACXZ,EAASY,QAAQJ,OAAS,KAC1BR,EAASY,QAAQF,QAAU,KAC3BV,EAASY,QAAU,KAEvB,EAqBA,OAnBAC,EAAAA,EAAAA,IAAoB,WAKlB,IAAIvB,EAKJ,MAHe,YAAXG,GACFS,IAEK,WACLE,GACF,CACF,GAAG,CAACX,EAAQS,EAAMZ,IAMXA,EAAiB,SAAWG,CACrC,CDtGiBqB,CAAS,CAAEjC,IAAAA,EAAKE,QAAAA,EAASS,YAAAA,EAAaF,eAAAA,IAarD,OAFsBT,KATO,WAAXY,GAYTrD,GACLuB,EAAAA,EAAAA,KAACP,EAAA,CACCqB,UAAU,0BACVnB,YAAAA,EACAlB,KAAAA,KAGF2E,EAAAA,EAAAA,cAAa1B,EAAM,CACjBvB,KAAM,MACN,aAAcqB,KASlBxB,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,IAAA,CACCiB,IAAAA,EACAC,OAAAA,EACAkC,IAAK5E,EACL4C,OAAAA,EACAO,eAAAA,EACAC,YAAa,MAAAA,EAAAA,OAAe,EAC5Bf,UAAU,qBACVS,QAAAA,EACAnB,MAAO,CACLQ,MAAO,OACPC,OAAQ,OACRyC,UAAW,QACXhC,aAAAA,IAIR,CAEAL,EAAYV,YAAc,c,yOEpEbgD,EAA+B,CAC1CC,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChBC,UAAW,SACXC,cAAe,YACfC,WAAY,SACZC,SAAU,WACVC,WAAY,GAsBDC,GAASC,EAAAA,EAAAA,IAAgC,SAACvE,EAAOwE,GAC5D,IAAMnE,GAASoE,EAAAA,EAAAA,IAAoB,SAAUzE,GAC7CsC,GAAgCC,EAAAA,EAAAA,WAAS,GAAKC,GAAArD,EAAAA,EAAAA,GAAAmD,EAAA,GAAvCoC,EAAAlC,EAAA,GAAUmC,EAAWnC,EAAA,GAE5BoC,GAkBIC,EAAAA,EAAAA,IAAiB7E,GAjBnBwB,EAAAoD,EAAApD,IACAC,EAAAmD,EAAAnD,OACA1C,EAAA6F,EAAA7F,KACA+F,EAAAF,EAAAE,WAAAC,EAAAH,EACAhD,aAAAA,OAAA,IAAAmD,EAAe,OAAAA,EACfrD,EAAAkD,EAAAlD,QACQsD,EAAAJ,EAARjD,OAAAsD,EAAAL,EACA3E,YAAAA,OAAA,IAAAgF,EAAc3F,EAAA2F,EAAAC,EAAAN,EACd5C,KAAAA,OAAA,IAAAkD,GAAO5E,EAAAA,EAAAA,KAACQ,EAAA,IAAkBoE,EAAAC,EAAAP,EAC1B9C,UAAAA,OAAA,IAAAqD,EAAY,UAAAA,EACZtD,EAAA+C,EAAA/C,QACAjB,EAAAgE,EAAAhE,SACAwE,EAAAR,EAAAQ,YACAnD,EAAA2C,EAAA3C,eACAE,EAAAyC,EAAAzC,YACAD,EAAA0C,EAAA1C,eACGhC,GAAAC,EAAAA,EAAAA,GAAAyE,EAAAxE,GAGCiF,GAAA7E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJoB,aAAAA,EACA0D,YAAaR,EAAa,WAAQ,GAC/BjB,GACAxD,EAAOkF,WAOZ,OAJIH,IACFC,EAAaD,YAAcA,IAI3B9E,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNgE,IAAAA,GACItE,GAAA,IACJkB,WAAWoE,EAAAA,EAAAA,IAAG,gBAAiBxF,EAAMoB,WACrC,eAAaqE,EAAAA,EAAAA,IAASf,GACtBhE,MAAO2E,EAEPzE,UAAAG,EAAAA,EAAAA,MAAC3B,EAAA,CAAqBsG,MAAOrF,EAC3BO,SAAA,EAAAN,EAAAA,EAAAA,KAACiB,EAAA,CACCC,IAAAA,EACAC,OAAAA,EACAI,QAAAA,EACAF,QAAQgE,EAAAA,EAAAA,IAAgBX,GAAY,WAClCL,GAAY,EACd,IACAjD,QAAAA,EACAzB,YAAAA,EACAlB,KAAAA,EACA6C,aAAAA,EACAI,KAAAA,EACAF,UAAAA,EACAG,eAAAA,EACAE,YAAAA,EACAD,eAAAA,IAEDtB,OAIT,IAEA0D,EAAOzD,YAAc,S,kCC1Ff+E,EAASC,EAAAA,GACL,CACN9G,KAAM8G,EAAAA,KAEHC,WACAC,OACAC,IAAI,EAAG,+CACPC,QACC,yHACA,8DAEJC,MAAOL,EAAAA,KAAaC,WAAWI,QAAQH,OACvCI,SAAUN,EAAAA,KAAaC,WAAWC,OAAOC,IAAI,KAE9CF,WAmKH,EAjKiB,WACf,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQC,EAAAA,EAAAA,KACdtE,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAArD,EAAAA,EAAAA,GAAAmD,EAAA,GAAhCuE,EAAIrE,EAAA,GAAEsE,EAAOtE,EAAA,GAEpBuE,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,YACNC,UAAUC,EAAAA,EAAAA,GAAYvB,KALtBwB,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aACaC,EAAMP,EAAnBQ,UAAaD,OA6Bf,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLC,SAAUL,GAzBG,SAAAM,GACfvB,GAASwB,EAAAA,EAAAA,IAAOD,IACbE,SACAC,MAAK,kBACJnB,EAAM,CACJoB,MAAM,yCACNC,YAAY,EACZ5D,SAAU,YACVhC,OAAQ,UACR6F,SAAU,KACV,IAEHC,OAAM,kBACLvB,EAAM,CACJoB,MAAM,8CACNC,YAAY,EACZ5D,SAAU,YACVhC,OAAQ,QACR6F,SAAU,KACV,GAER,IAKIE,GAAG,OACHC,GAAG,OACHC,EAAE,IACFC,GAAG,UACH1G,aAAc,EAAEhB,SAAA,EAEhB2H,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACvH,MAAM,UAASL,SAAC,cAEzB4G,EAAAA,EAAAA,MAACiB,EAAAA,GAAW,CAACC,UAAWpB,EAAOvI,KAAM4J,YAAU,EAAA/H,SAAA,EAC7C2H,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAC3H,MAAM,UAASL,SAAC,UAC3B4G,EAAAA,EAAAA,MAACqB,EAAAA,EAAU,CAAAjI,SAAA,EACT2H,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,cAAc,OAAMnI,UACpC2H,EAAAA,EAAAA,KAACjE,EAAM,CAACgE,GAAG,UAAUU,KAAK,UAE5BT,EAAAA,EAAAA,KAACU,EAAAA,GAAKzI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJ0I,KAAK,OACLjI,MAAM,UACNmE,YAAY,YACZ+D,YAAY,kBACZC,aAAc,CAAEC,QAAS,GAAKpI,MAAO,YACjCmG,EAAS,SAAO,IACpBkB,GAAI,UACJgB,OAAQ,CAAElE,YAAa,WACvBmE,OAAQ,CAAEnE,YAAa,kBAG3BmD,EAAAA,EAAAA,KAACiB,EAAAA,GAAgB,CAAA5I,SACd0G,EAAOvI,MAAQuI,EAAOvI,KAAK0K,cAIhCjC,EAAAA,EAAAA,MAACiB,EAAAA,GAAW,CAACC,UAAWpB,EAAOpB,MAAOyC,YAAU,EAAA/H,SAAA,EAC9C2H,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAC3H,MAAM,UAASL,SAAC,WAC3B4G,EAAAA,EAAAA,MAACqB,EAAAA,EAAU,CAAAjI,SAAA,EACT2H,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,cAAc,OAAMnI,UACpC2H,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAACzI,MAAO,eAEpBsH,EAAAA,EAAAA,KAACU,EAAAA,GAAKzI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJ0I,KAAK,QACLjI,MAAM,UACNmE,YAAY,YACZ+D,YAAY,mBACZC,aAAc,CAAEC,QAAS,GAAKpI,MAAO,YACjCmG,EAAS,UAAQ,IACrBkB,GAAI,UACJgB,OAAQ,CAAElE,YAAa,WACvBmE,OAAQ,CAAEnE,YAAa,kBAI3BmD,EAAAA,EAAAA,KAACiB,EAAAA,GAAgB,CAAA5I,SACd0G,EAAOpB,OAASoB,EAAOpB,MAAMuD,cAIlCjC,EAAAA,EAAAA,MAACiB,EAAAA,GAAW,CAACC,UAAWpB,EAAOnB,SAAUwC,YAAU,EAAA/H,SAAA,EACjD2H,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAC3H,MAAM,UAASL,SAAC,cAC3B4G,EAAAA,EAAAA,MAACqB,EAAAA,EAAU,CAACG,KAAK,KAAIpI,SAAA,EACnB2H,EAAAA,EAAAA,KAACU,EAAAA,GAAKzI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJmJ,GAAG,SACH1I,MAAM,UACNmE,YAAY,YACZ8D,KAAMrC,EAAO,OAAS,WACtBsC,YAAY,iBACZC,aAAc,CAAEC,QAAS,GAAKpI,MAAO,YACjCmG,EAAS,aAAW,IACxBkB,GAAI,UACJgB,OAAQ,CAAElE,YAAa,WACvBmE,OAAQ,CAAEnE,YAAa,eAEzBmD,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,cAAc,OAAMnI,UACpC2H,EAAAA,EAAAA,KAACqB,EAAAA,EAAQ,CAAC3I,MAAO,eAEnBsH,EAAAA,EAAAA,KAACsB,EAAAA,EAAiB,CAAC3I,MAAM,SAAQN,UAC/B2H,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,EAAE,UACFf,KAAK,KACLgB,QAjHQ,WAAH,OAASlD,GAASD,EAAM,EAkH7BoD,WAAW,cAAarJ,SAEvBiG,GACC0B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAW,CAACjJ,MAAO,aAEpBsH,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CAAClJ,MAAO,oBAKzBsH,EAAAA,EAAAA,KAACiB,EAAAA,GAAgB,CAAA5I,SACd0G,EAAOnB,UAAYmB,EAAOnB,SAASsD,cAIxClB,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLZ,KAAK,SACL1C,UAAWA,EACX4D,GAAG,IACHC,QAAQ,UACRpJ,MAAM,UACNmE,YAAa,YACbkE,OAAQ,CAAErI,MAAO,UAAWqH,GAAI,WAChCiB,OAAQ,CAAEtI,MAAO,UAAWqH,GAAI,WAAY1H,SAC7C,aAID2H,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLE,QAAS,kBAAM1D,EAAS,SAAS,EACjC+D,QAAQ,QACRpJ,MAAO,UACPqI,OAAQ,CAAErI,MAAO,UAAWqH,GAAI,aAChCiB,OAAQ,CAAEtI,MAAO,UAAWqH,GAAI,aAAc1H,SAC/C,gDAKP,C,6ECrMasJ,GAAcI,EAAAA,EAAAA,GAAW,CACpCzJ,YAAa,cACb0J,MACExJ,EAAAA,EAAAA,MAAC,KAAEM,KAAK,eACNT,SAAA,EAAAN,EAAAA,EAAAA,KAAC,QAAKgB,EAAE,uaACRhB,EAAAA,EAAAA,KAAC,QAAKgB,EAAE,yT,8ECLDoI,GAAYY,EAAAA,EAAAA,GAAW,CAClCzJ,YAAa,YACb0J,MACExJ,EAAAA,EAAAA,MAAC,KAAEM,KAAK,eACNT,SAAA,EAAAN,EAAAA,EAAAA,KAAC,QAAKgB,EAAE,uJACRhB,EAAAA,EAAAA,KAAC,QAAKgB,EAAE,iZ,2DCLDsI,GAAWU,E,QAAAA,GAAW,CACjChJ,EAAG,qRACHT,YAAa,Y,8ECFFsJ,GAAWG,EAAAA,EAAAA,GAAW,CACjCzJ,YAAa,WACb0J,MACExJ,EAAAA,EAAAA,MAAC,KAAEM,KAAK,eACNT,SAAA,EAAAN,EAAAA,EAAAA,KAAC,QAAKgB,EAAE,0QACRhB,EAAAA,EAAAA,KAAC,UAAOkF,GAAG,KAAKgF,GAAG,KAAKC,EAAE,U","sources":["../node_modules/@chakra-ui/avatar/src/avatar-context.tsx","../node_modules/@chakra-ui/avatar/src/avatar-name.tsx","../node_modules/@chakra-ui/avatar/src/generic-avatar-icon.tsx","../node_modules/@chakra-ui/avatar/src/avatar-image.tsx","../node_modules/@chakra-ui/image/src/use-image.ts","../node_modules/@chakra-ui/avatar/src/avatar.tsx","pages/Register.jsx","../node_modules/@chakra-ui/icons/src/ViewOff.tsx","../node_modules/@chakra-ui/icons/src/Email.tsx","../node_modules/@chakra-ui/icons/src/Lock.tsx","../node_modules/@chakra-ui/icons/src/View.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\n\nexport const [AvatarStylesProvider, useAvatarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\",\n})\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useAvatarStyles } from \"./avatar-context\"\nimport { AvatarOptions } from \"./avatar-types\"\n\nexport function initials(name: string) {\n  const names = name.split(\" \")\n  const firstName = names[0] ?? \"\"\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\"\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n\ninterface AvatarNameProps\n  extends HTMLChakraProps<\"div\">,\n    Pick<AvatarOptions, \"name\" | \"getInitials\"> {}\n/**\n * The avatar name container\n */\n\nexport function AvatarName(props: AvatarNameProps) {\n  const { name, getInitials, ...rest } = props\n  const styles = useAvatarStyles()\n\n  return (\n    <chakra.div role=\"img\" aria-label={name} {...rest} __css={styles.label}>\n      {name ? getInitials?.(name) : null}\n    </chakra.div>\n  )\n}\n\nAvatarName.displayName = \"AvatarName\"\n","import { chakra, ChakraComponent } from \"@chakra-ui/system\"\n\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\nexport const GenericAvatarIcon: ChakraComponent<\"svg\"> = (props) => (\n  <chakra.svg\n    viewBox=\"0 0 128 128\"\n    color=\"#fff\"\n    width=\"100%\"\n    height=\"100%\"\n    className=\"chakra-avatar__svg\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      d=\"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n    />\n  </chakra.svg>\n)\n","import { ImageProps, useImage } from \"@chakra-ui/image\"\nimport { chakra, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cloneElement } from \"react\"\nimport { AvatarName } from \"./avatar-name\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\n\ntype AvatarImageProps = ImageProps & {\n  getInitials?: (name: string) => string\n  borderRadius?: SystemStyleObject[\"borderRadius\"]\n  icon: React.ReactElement\n  iconLabel?: string\n  name?: string\n}\n\nexport function AvatarImage(props: AvatarImageProps) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = <GenericAvatarIcon />,\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin,\n  } = props\n\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback })\n\n  const hasLoaded = status === \"loaded\"\n\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n  const showFallback = !src || !hasLoaded\n\n  if (showFallback) {\n    return name ? (\n      <AvatarName\n        className=\"chakra-avatar__initials\"\n        getInitials={getInitials}\n        name={name}\n      />\n    ) : (\n      cloneElement(icon, {\n        role: \"img\",\n        \"aria-label\": iconLabel,\n      })\n    )\n  }\n\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n  return (\n    <chakra.img\n      src={src}\n      srcSet={srcSet}\n      alt={name}\n      onLoad={onLoad}\n      referrerPolicy={referrerPolicy}\n      crossOrigin={crossOrigin ?? undefined}\n      className=\"chakra-avatar__img\"\n      loading={loading}\n      __css={{\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius,\n      }}\n    />\n  )\n}\n\nAvatarImage.displayName = \"AvatarImage\"\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { AvatarStylesProvider } from \"./avatar-context\"\nimport { AvatarImage } from \"./avatar-image\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\nimport { initials } from \"./avatar-name\"\nimport { AvatarOptions } from \"./avatar-types\"\nimport { useState } from \"react\"\n\nexport const baseStyle: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0,\n}\n\nexport interface AvatarProps\n  extends Omit<HTMLChakraProps<\"span\">, \"onError\">,\n    AvatarOptions,\n    ThemingProps<\"Avatar\"> {\n  crossOrigin?: HTMLChakraProps<\"img\">[\"crossOrigin\"]\n  iconLabel?: string\n  /**\n   * If `true`, opt out of the avatar's `fallback` logic and\n   * renders the `img` at all times.\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n}\n\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\nexport const Avatar = forwardRef<AvatarProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = <GenericAvatarIcon />,\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props)\n\n  const avatarStyles: SystemStyleObject = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined,\n    ...baseStyle,\n    ...styles.container,\n  }\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor\n  }\n\n  return (\n    <chakra.span\n      ref={ref}\n      {...rest}\n      className={cx(\"chakra-avatar\", props.className)}\n      data-loaded={dataAttr(isLoaded)}\n      __css={avatarStyles}\n    >\n      <AvatarStylesProvider value={styles}>\n        <AvatarImage\n          src={src}\n          srcSet={srcSet}\n          loading={loading}\n          onLoad={callAllHandlers(onLoadProp, () => {\n            setIsLoaded(true)\n          })}\n          onError={onError}\n          getInitials={getInitials}\n          name={name}\n          borderRadius={borderRadius}\n          icon={icon}\n          iconLabel={iconLabel}\n          ignoreFallback={ignoreFallback}\n          crossOrigin={crossOrigin}\n          referrerPolicy={referrerPolicy}\n        />\n        {children}\n      </AvatarStylesProvider>\n    </chakra.span>\n  )\n})\n\nAvatar.displayName = \"Avatar\"\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { signup } from 'redux/auth/authOperations';\nimport { selectAuthLoading } from 'redux/selectors';\nimport { EmailIcon, LockIcon, ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n  Heading,\n  Button,\n  useToast,\n  InputLeftElement,\n  InputGroup,\n  InputRightElement,\n  Avatar,\n} from '@chakra-ui/react';\n\nconst schema = yup\n  .object({\n    name: yup\n      .string()\n      .required()\n      .trim()\n      .min(3, 'Name must be no less than 3 characters long')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Name may contain only letters, apostrophe, dash and spaces'\n      ),\n    email: yup.string().required().email().trim(),\n    password: yup.string().required().trim().min(7),\n  })\n  .required();\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoading = useSelector(selectAuthLoading);\n  const toast = useToast();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onTouched',\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = data => {\n    dispatch(signup(data))\n      .unwrap()\n      .then(() =>\n        toast({\n          title: `Registration is successfully completed`,\n          isClosable: true,\n          position: 'top-right',\n          status: 'success',\n          duration: 3000,\n        })\n      )\n      .catch(() =>\n        toast({\n          title: `User with this email address already exists`,\n          isClosable: true,\n          position: 'top-right',\n          status: 'error',\n          duration: 3000,\n        })\n      );\n  };\n\n  return (\n    <VStack\n      onSubmit={handleSubmit(onSubmit)}\n      as=\"form\"\n      mx=\"auto\"\n      p=\"4\"\n      bg=\"#1a1d2b\"\n      borderRadius={8}\n    >\n      <Heading color=\"#ffffff\">Register</Heading>\n\n      <FormControl isInvalid={errors.name} isRequired>\n        <FormLabel color=\"#ffffff\">Name</FormLabel>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <Avatar bg=\"#ffd76d\" size=\"xs\" />\n          </InputLeftElement>\n          <Input\n            type=\"text\"\n            color=\"#ffffff\"\n            borderColor=\"#ffd76d55\"\n            placeholder=\"Enter your name\"\n            _placeholder={{ opacity: 0.5, color: '#ffd76d' }}\n            {...register('name')}\n            bg={'#161821'}\n            _hover={{ borderColor: '#ffd76d' }}\n            _focus={{ borderColor: '#ffd76d' }}\n          />\n        </InputGroup>\n        <FormErrorMessage>\n          {errors.name && errors.name.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={errors.email} isRequired>\n        <FormLabel color=\"#ffffff\">Email</FormLabel>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <EmailIcon color={'#ffd76d'} />\n          </InputLeftElement>\n          <Input\n            type=\"email\"\n            color=\"#ffffff\"\n            borderColor=\"#ffd76d55\"\n            placeholder=\"Enter your email\"\n            _placeholder={{ opacity: 0.5, color: '#ffd76d' }}\n            {...register('email')}\n            bg={'#161821'}\n            _hover={{ borderColor: '#ffd76d' }}\n            _focus={{ borderColor: '#ffd76d' }}\n          />\n        </InputGroup>\n\n        <FormErrorMessage>\n          {errors.email && errors.email.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={errors.password} isRequired>\n        <FormLabel color=\"#ffffff\">Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            pr=\"4.5rem\"\n            color=\"#ffffff\"\n            borderColor=\"#ffd76d55\"\n            type={show ? 'text' : 'password'}\n            placeholder=\"Enter password\"\n            _placeholder={{ opacity: 0.5, color: '#ffd76d' }}\n            {...register('password')}\n            bg={'#161821'}\n            _hover={{ borderColor: '#ffd76d' }}\n            _focus={{ borderColor: '#ffd76d' }}\n          />\n          <InputLeftElement pointerEvents=\"none\">\n            <LockIcon color={'#ffd76d'} />\n          </InputLeftElement>\n          <InputRightElement width=\"4.5rem\">\n            <Button\n              h=\"1.75rem\"\n              size=\"sm\"\n              onClick={handleClick}\n              background=\"transparent\"\n            >\n              {show ? (\n                <ViewOffIcon color={'#ff2e4d'} />\n              ) : (\n                <ViewIcon color={'#ffd76d'} />\n              )}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n        <FormErrorMessage>\n          {errors.password && errors.password.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        isLoading={isLoading}\n        mt=\"4\"\n        variant=\"outline\"\n        color=\"#ffd76d\"\n        borderColor={'#ffd76d55'}\n        _hover={{ color: '#1a1d2b', bg: '#ffd76d' }}\n        _focus={{ color: '#1a1d2b', bg: '#ffd76d' }}\n      >\n        Sign Up\n      </Button>\n\n      <Button\n        onClick={() => navigate('/login')}\n        variant=\"ghost\"\n        color={'#ffd76d'}\n        _hover={{ color: '#ffffff', bg: '#ffffff10' }}\n        _focus={{ color: '#ffffff', bg: '#ffffff10' }}\n      >\n        Click here if you already have an account\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Register;\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ViewOffIcon = createIcon({\n  displayName: \"ViewOffIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M23.2,10.549a20.954,20.954,0,0,0-4.3-3.6l4-3.995a1,1,0,1,0-1.414-1.414l-.018.018a.737.737,0,0,1-.173.291l-19.5,19.5c-.008.007-.018.009-.026.017a1,1,0,0,0,1.631,1.088l4.146-4.146a11.26,11.26,0,0,0,4.31.939h.3c4.256,0,8.489-2.984,11.051-5.8A2.171,2.171,0,0,0,23.2,10.549ZM16.313,13.27a4.581,4.581,0,0,1-3,3.028,4.3,4.3,0,0,1-3.1-.19.253.253,0,0,1-.068-.407l5.56-5.559a.252.252,0,0,1,.407.067A4.3,4.3,0,0,1,16.313,13.27Z\" />\n      <path d=\"M7.615,13.4a.244.244,0,0,0,.061-.24A4.315,4.315,0,0,1,7.5,12,4.5,4.5,0,0,1,12,7.5a4.276,4.276,0,0,1,1.16.173.244.244,0,0,0,.24-.062l1.941-1.942a.254.254,0,0,0-.1-.421A10.413,10.413,0,0,0,12,4.75C7.7,4.692,3.4,7.7.813,10.549a2.15,2.15,0,0,0-.007,2.9,21.209,21.209,0,0,0,3.438,3.03.256.256,0,0,0,.326-.029Z\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const EmailIcon = createIcon({\n  displayName: \"EmailIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M11.114,14.556a1.252,1.252,0,0,0,1.768,0L22.568,4.87a.5.5,0,0,0-.281-.849A1.966,1.966,0,0,0,22,4H2a1.966,1.966,0,0,0-.289.021.5.5,0,0,0-.281.849Z\" />\n      <path d=\"M23.888,5.832a.182.182,0,0,0-.2.039l-6.2,6.2a.251.251,0,0,0,0,.354l5.043,5.043a.75.75,0,1,1-1.06,1.061l-5.043-5.043a.25.25,0,0,0-.354,0l-2.129,2.129a2.75,2.75,0,0,1-3.888,0L7.926,13.488a.251.251,0,0,0-.354,0L2.529,18.531a.75.75,0,0,1-1.06-1.061l5.043-5.043a.251.251,0,0,0,0-.354l-6.2-6.2a.18.18,0,0,0-.2-.039A.182.182,0,0,0,0,6V18a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A.181.181,0,0,0,23.888,5.832Z\" />\n    </g>\n  ),\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const LockIcon = createIcon({\n  d: \"M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z\",\n  displayName: \"LockIcon\",\n})\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ViewIcon = createIcon({\n  displayName: \"ViewIcon\",\n  path: (\n    <g fill=\"currentColor\">\n      <path d=\"M23.432,10.524C20.787,7.614,16.4,4.538,12,4.6,7.6,4.537,3.213,7.615.568,10.524a2.211,2.211,0,0,0,0,2.948C3.182,16.351,7.507,19.4,11.839,19.4h.308c4.347,0,8.671-3.049,11.288-5.929A2.21,2.21,0,0,0,23.432,10.524ZM7.4,12A4.6,4.6,0,1,1,12,16.6,4.6,4.6,0,0,1,7.4,12Z\" />\n      <circle cx=\"12\" cy=\"12\" r=\"2\" />\n    </g>\n  ),\n})\n"],"names":["_createContext","createContext","name","hookName","providerName","_createContext2","_slicedToArray","AvatarStylesProvider","useAvatarStyles","initials","_a","names","split","firstName","lastName","length","concat","charAt","AvatarName","props","getInitials","rest","_objectWithoutProperties","_excluded","styles","jsx","chakra","_objectSpread","role","__css","label","children","displayName","GenericAvatarIcon","jsxs","viewBox","color","width","height","className","fill","d","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","_props$icon","icon","ignoreFallback","referrerPolicy","crossOrigin","status","sizes","_useState","useState","_useState2","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","cloneElement","alt","objectFit","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","forwardRef","ref","useMultiStyleConfig","isLoaded","setIsLoaded","_omitThemingProps","omitThemingProps","showBorder","_omitThemingProps$bor","onLoadProp","_omitThemingProps$get","_omitThemingProps$ico","_omitThemingProps$ico2","borderColor","avatarStyles","borderWidth","container","cx","dataAttr","value","callAllHandlers","schema","yup","required","trim","min","matches","email","password","dispatch","useDispatch","navigate","useNavigate","isLoading","useSelector","selectAuthLoading","toast","useToast","show","setShow","_useForm","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","formState","_jsxs","VStack","onSubmit","data","signup","unwrap","then","title","isClosable","duration","catch","as","mx","p","bg","_jsx","Heading","FormControl","isInvalid","isRequired","FormLabel","InputGroup","InputLeftElement","pointerEvents","size","Input","type","placeholder","_placeholder","opacity","_hover","_focus","FormErrorMessage","message","EmailIcon","pr","LockIcon","InputRightElement","Button","h","onClick","background","ViewOffIcon","ViewIcon","mt","variant","createIcon","path","cy","r"],"sourceRoot":""}